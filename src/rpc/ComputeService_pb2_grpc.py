# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

# bad import needs to repair.
from src.protoc import ComputeService_pb2 as ComputeService__pb2


class ComputeServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.areaOfRectangle = channel.unary_unary(
        '/ComputeService/areaOfRectangle',
        request_serializer=ComputeService__pb2.areaOfRectangleRequest.SerializeToString,
        response_deserializer=ComputeService__pb2.areaOfRectangleResponse.FromString,
        )


class ComputeServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def areaOfRectangle(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ComputeServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'areaOfRectangle': grpc.unary_unary_rpc_method_handler(
          servicer.areaOfRectangle,
          request_deserializer=ComputeService__pb2.areaOfRectangleRequest.FromString,
          response_serializer=ComputeService__pb2.areaOfRectangleResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ComputeService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
